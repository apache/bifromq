syntax = "proto3";
import "commontype/QoS.proto";
import "subbroker/type.proto";

option java_multiple_files = true;
option java_package = "org.apache.bifromq.mqtt.inbox.rpc.proto";;
option java_outer_classname = "MessageReceiverProtos";

package mqttbroker;

service OnlineInboxBroker {
  rpc write (stream WriteRequest) returns (stream WriteReply);
  rpc sub(SubRequest) returns (SubReply);
  rpc unsub(UnsubRequest) returns (UnsubReply);
  rpc checkSubscriptions(subbroker.CheckRequest) returns (subbroker.CheckReply);
}

message WriteRequest {
  uint64 reqId = 1;
  subbroker.DeliveryRequest request = 2;
}

message WriteReply {
  uint64 reqId = 1;
  subbroker.DeliveryReply reply = 2;
}

message SubRequest {
  uint64 reqId = 1;
  string tenantId = 2;
  string sessionId = 3;
  string topicFilter = 4;
  commontype.QoS subQoS = 5;
}

message SubReply {
  enum Result{
    OK = 0;
    EXISTS = 1;
    NO_INBOX = 2;
    EXCEED_LIMIT = 3;
    NOT_AUTHORIZED = 4;
    TOPIC_FILTER_INVALID = 5;
    WILDCARD_NOT_SUPPORTED = 6;
    SHARED_SUBSCRIPTION_NOT_SUPPORTED = 7;
    SUBSCRIPTION_IDENTIFIER_NOT_SUPPORTED = 8;
    BACK_PRESSURE_REJECTED = 9;
    TRY_LATER = 10;
    ERROR = 11;
  }
  uint64 reqId = 1;
  Result result = 2;
}

message UnsubRequest {
  uint64 reqId = 1;
  string tenantId = 2;
  string sessionId = 3;
  string topicFilter = 4;
}

message UnsubReply {
  enum Result {
    OK = 0;
    NO_SUB = 1;
    NO_INBOX = 2;
    NOT_AUTHORIZED = 3;
    TOPIC_FILTER_INVALID = 4;
    BACK_PRESSURE_REJECTED = 5;
    TRY_LATER = 6;
    ERROR = 7;
  }
  uint64 reqId = 1;
  Result result = 2;
}
